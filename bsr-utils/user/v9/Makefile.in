# Makefile for bsr.o
#
# This file is part of BSR by Man Technology inc.
#
# bsr is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# bsr is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with bsr; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#
VPATH = ../../../bsr-headers:../shared

# variables set by configure
DISTRO = @DISTRO@
prefix = @prefix@
exec_prefix = @exec_prefix@
localstatedir = @localstatedir@
datarootdir = @datarootdir@
datadir = @datadir@
sbindir = @sbindir@
sysconfdir = @sysconfdir@
BASH_COMPLETION_SUFFIX = @BASH_COMPLETION_SUFFIX@
UDEV_RULE_SUFFIX = @UDEV_RULE_SUFFIX@
INITDIR = @INITDIR@
LIBDIR = @prefix@/lib/@PACKAGE_TARNAME@
CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LN_S = @LN_S@

BSR_LIB_DIR = @BSR_LIB_DIR@
BSR_RUN_DIR = @BSR_RUN_DIR@
BSR_LOCK_DIR = @BSR_LOCK_DIR@
BSR_CONFIG_DIR = @BSR_CONFIG_DIR@

# features enabled or disabled by configure
WITH_UDEV = @WITH_UDEV@
WITH_XEN = @WITH_XEN@
WITH_BASHCOMPLETION = @WITH_BASHCOMPLETION@

# for some reason some of the commands below only work correctly in bash,
# and not in e.g. dash. I'm too lazy to fix it to be compatible.
SHELL=/bin/bash

# variables meant to be overridden from the make command line
DESTDIR ?= /

# DW-1719: Detect os
is_win32 =


ifeq '$(findstring ;,$(PATH))' ';'
	is_win32 = yes
else
    UNAME := $(shell uname 2>/dev/null || echo Unknown)
    UNAME := $(patsubst CYGWIN%,Cygwin,$(UNAME))

	ifeq ($(UNAME), Cygwin)
		is_win32 = yes
	endif
endif

ifdef is_win32
	CFLAGS += -Wall -I../../../bsr-headers -I.. -I. -I../shared -I../../../bsr-platform/windows/bsrvflt
	# _WIN
	# _WIN_CLI_UPDATE for updated cygwin version (2.10.0)
	CFLAGS += -gdwarf-2 -g3 -D_WIN -D_WIN_APP -D_WIN_CLI_UPDATE 
	ifdef x64
		CFLAGS += -D_WIN64 -Dx64
	else
		CFLAGS += -D_WIN32 
	endif
	CFLAGS += $(EXTRA_CFLAGS)
	
	# BSR-1002
	LDLIBS += -liphlpapi
else
# _LIN
CFLAGS += -Wall -I../../../bsr-headers -I.. -I. -I../shared
CFLAGS += -D_LIN
CFLAGS += $(EXTRA_CFLAGS)

GENETLINK_H := /usr/include/linux/genetlink.h
libgenl.o: CFLAGS += $(shell for w in CTRL_ATTR_VERSION CTRL_ATTR_HDRSIZE CTRL_ATTR_MCAST_GROUPS; do grep -qw $$w $(GENETLINK_H) && echo -DHAVE_$$w; done)
endif

bsradm-obj = bsradm_scanner.o bsradm_parser.o bsradm_postparse.o \
	      bsradm_main.o bsradm_adjust.o bsradm_dump.o bsrtool_common.o \
	      bsradm_usage_cnt.o bsr_buildtag.o registry.o config_flags.o \
	      libgenl.o bsr_nla.o shared_tool.o shared_main.o shared_parser.o

bsrsetup-obj = libgenl.o registry.o bsrsetup.o bsrtool_common.o \
		bsr_buildtag.o bsr_strings.o config_flags.o bsr_nla.o \
		wrap_printf.o bsrsetup_colors.o shared_tool.o

bsrmeta-obj = bsrmeta.o bsrmeta_scanner.o bsrtool_common.o bsr_buildtag.o \
	       bsr_strings.o shared_tool.o

all-obj := $(bsradm-obj) $(bsrsetup-obj) $(bsrmeta-obj)

all: tools

pre-build:
	rm -f ../../../bsr-headers/bsr_strings.o

../shared_prereqs.mk: ;
include ../shared_prereqs.mk

tools: pre-build bsradm bsrmeta bsrsetup

bsradm: $(bsradm-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^

bsradm_scanner.c: bsradm_scanner.fl bsradm_parser.h
	flex -s -obsradm_scanner.c bsradm_scanner.fl

bsrsetup: $(bsrsetup-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^ $(LDLIBS)

bsrmeta: $(bsrmeta-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^

clean:
	rm -f bsradm_scanner.c
	rm -f bsrsetup bsradm bsrmeta $(all-obj)
	rm -f bsr_strings.c bsr_strings.h
	rm -f *~

distclean: clean
	rm -f $(all-dep)

install:
	install -d $(DESTDIR)$(sbindir)
	install -d $(DESTDIR)$(localstatedir)/lib/bsr
	install -d $(DESTDIR)$(localstatedir)/lock
	if getent group haclient > /dev/null 2> /dev/null ; then	\
		install -g haclient -m 4750 bsrsetup $(DESTDIR)$(sbindir) ;	\
		install -g haclient -m 4750 bsrmeta $(DESTDIR)$(sbindir) ;	\
		install -m 755 bsradm $(DESTDIR)$(sbindir) ;		\
	else								\
		install -m 755 bsrsetup $(DESTDIR)$(sbindir) ;		\
		install -m 755 bsrmeta $(DESTDIR)$(sbindir) ;		\
		install -m 755 bsradm $(DESTDIR)$(sbindir) ;		\
	fi
	if test -d $(DESTDIR)/sbin && \
	 ! test $(DESTDIR)/sbin -ef $(DESTDIR)$(sbindir) ; then		\
		ln -sf $(sbindir)/bsrsetup $(DESTDIR)/sbin ;		\
		ln -sf $(sbindir)/bsrmeta $(DESTDIR)/sbin ;		\
		ln -sf $(sbindir)/bsradm $(DESTDIR)/sbin ;		\
	fi
	install -d $(DESTDIR)$(BSR_LIB_DIR)

uninstall:
	rm -f $(DESTDIR)$(sbindir)/{bsrsetup,bsradm,bsrmeta}
	rm -f $(DESTDIR)/sbin/{bsrsetup,bsradm,bsrmeta}

spell:
	for f in bsradm_adjust.c bsradm_main.c bsradm_parser.c bsradm_usage_cnt.c bsrmeta.c bsrsetup.c bsrtool_common.c; do \
	 	aspell --save-repl --dont-backup --personal=./../documentation/aspell.en.per check $$f; \
	done

.PHONY: install uninstall clean distclean spell
../../configure:
	@echo "please (re-)run ./autogen.sh with appropriate arguments"; exit 1
../../config.status: ../../configure
	@echo "please (re-)run ./configure with appropriate arguments"; exit 1
Makefile.in: ;
Makefile: Makefile.in ../../config.status
	cd ../.. && ./config.status user/v9/Makefile

